import numpy as np


class GLL12:
    """
    stateless class with quadrature points, weights, and basis polynomials
    for degree 11 GLL elements (with 12 points).
    """

    @staticmethod
    def qp():
        """
        return array of quadrature points in reference element [-1,1]
        """
        return np.array(
            [
                -1,
                -0.9448992722228822234075801383227774734850125459557395089569,
                -0.8192793216440066783486415817181081472815060198313366076197,
                -0.6328761530318606776624048544438185790974069562069635478417,
                -0.3995309409653489322643497915669672535252931579024610078809,
                -0.1365529328549275548640618557396939079583512957095352166033,
                0.1365529328549275548640618557396939079583512957095352166033,
                0.3995309409653489322643497915670303331234986721290974863361,
                0.6328761530318606776624048544436623527129373520527061544997,
                0.8192793216440066783486415817247142692108993119633642160985,
                0.9448992722228822234075801383318943999022485486570999758995,
                1,
            ]
        )

    @staticmethod
    def qw():
        """
        return array of quadrature weights that correspond to quadrature points from qp()
        """
        return np.array(
            (
                0.015151515151515151515,
                0.091684517413196130668,
                0.15797470556437011516,
                0.21250841776102114536,
                0.25127560319920128029,
                0.27140524091069617700,
                0.27140524091069617700,
                0.25127560319920128029,
                0.21250841776102114536,
                0.15797470556437011516,
                0.091684517413196130668,
                0.015151515151515151515,
            )
        )

    @staticmethod
    def gll_basis():
        pass
